Terminals unused in grammar

    OPEN_BRACKETS
    CLOSE_BRACKETS
    LABEL
    TYPE
    ARRAY
    OF
    PROCEDURE
    FUNCTION
    GOTO
    IF
    THEN
    ELSE
    NOT
    OR
    AND
    WHILE
    DO
    INTDIV
    PLUS
    MINUS
    MULTIPLY
    DIVIDE


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 PROGRAM IDENTIFIER OPEN_PARENTHESIS identifiers_list CLOSE_PARENTHESIS SEMICOLON block DOT

    3 $@2: %empty

    4 block: vars_declaration $@2 compound_command

    5 vars_declaration: VAR declare_vars
    6                 | %empty

    7 declare_vars: declare_vars declare_var
    8             | declare_var

    9 $@3: %empty

   10 $@4: %empty

   11 declare_var: $@3 var_list COLON type $@4 SEMICOLON

   12 type: IDENTIFIER

   13 var_list: var_list COMMA IDENTIFIER
   14         | IDENTIFIER

   15 identifiers_list: identifiers_list COMMA IDENTIFIER
   16                 | IDENTIFIER

   17 $@5: %empty

   18 compound_command: $@5 T_BEGIN commands T_END

   19 commands: assignment

   20 $@6: %empty

   21 $@7: %empty

   22 assignment: IDENTIFIER $@6 ASSIGNMENT expression $@7 SEMICOLON

   23 expression: simple_expression

   24 simple_expression: term

   25 term: factor

   26 factor: NUMBER
   27       | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 2
    OPEN_PARENTHESIS (259) 2
    CLOSE_PARENTHESIS (260) 2
    OPEN_BRACKETS (261)
    CLOSE_BRACKETS (262)
    COMMA (263) 13 15
    SEMICOLON (264) 2 11 22
    COLON (265) 11
    DOT (266) 2
    T_BEGIN (267) 18
    T_END (268) 18
    VAR (269) 5
    IDENTIFIER (270) 2 12 13 14 15 16 22 27
    ASSIGNMENT (271) 22
    NUMBER (272) 26
    LABEL (273)
    TYPE (274)
    ARRAY (275)
    OF (276)
    PROCEDURE (277)
    FUNCTION (278)
    GOTO (279)
    IF (280)
    THEN (281)
    ELSE (282)
    NOT (283)
    OR (284)
    AND (285)
    WHILE (286)
    DO (287)
    INTDIV (288)
    PLUS (289)
    MINUS (290)
    MULTIPLY (291)
    DIVIDE (292)


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    program (39)
        on left: 2
        on right: 0
    $@1 (40)
        on left: 1
        on right: 2
    block (41)
        on left: 4
        on right: 2
    $@2 (42)
        on left: 3
        on right: 4
    vars_declaration (43)
        on left: 5 6
        on right: 4
    declare_vars (44)
        on left: 7 8
        on right: 5 7
    declare_var (45)
        on left: 11
        on right: 7 8
    $@3 (46)
        on left: 9
        on right: 11
    $@4 (47)
        on left: 10
        on right: 11
    type (48)
        on left: 12
        on right: 11
    var_list (49)
        on left: 13 14
        on right: 11 13
    identifiers_list (50)
        on left: 15 16
        on right: 2 15
    compound_command (51)
        on left: 18
        on right: 4
    $@5 (52)
        on left: 17
        on right: 18
    commands (53)
        on left: 19
        on right: 18
    assignment (54)
        on left: 22
        on right: 19
    $@6 (55)
        on left: 20
        on right: 22
    $@7 (56)
        on left: 21
        on right: 22
    expression (57)
        on left: 23
        on right: 22
    simple_expression (58)
        on left: 24
        on right: 23
    term (59)
        on left: 25
        on right: 24
    factor (60)
        on left: 26 27
        on right: 25


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . PROGRAM IDENTIFIER OPEN_PARENTHESIS identifiers_list CLOSE_PARENTHESIS SEMICOLON block DOT

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 PROGRAM . IDENTIFIER OPEN_PARENTHESIS identifiers_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENTIFIER  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM IDENTIFIER . OPEN_PARENTHESIS identifiers_list CLOSE_PARENTHESIS SEMICOLON block DOT

    OPEN_PARENTHESIS  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM IDENTIFIER OPEN_PARENTHESIS . identifiers_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENTIFIER  shift, and go to state 7

    identifiers_list  go to state 8


State 7

   16 identifiers_list: IDENTIFIER .

    $default  reduce using rule 16 (identifiers_list)


State 8

    2 program: $@1 PROGRAM IDENTIFIER OPEN_PARENTHESIS identifiers_list . CLOSE_PARENTHESIS SEMICOLON block DOT
   15 identifiers_list: identifiers_list . COMMA IDENTIFIER

    CLOSE_PARENTHESIS  shift, and go to state 9
    COMMA              shift, and go to state 10


State 9

    2 program: $@1 PROGRAM IDENTIFIER OPEN_PARENTHESIS identifiers_list CLOSE_PARENTHESIS . SEMICOLON block DOT

    SEMICOLON  shift, and go to state 11


State 10

   15 identifiers_list: identifiers_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM IDENTIFIER OPEN_PARENTHESIS identifiers_list CLOSE_PARENTHESIS SEMICOLON . block DOT

    VAR  shift, and go to state 13

    $default  reduce using rule 6 (vars_declaration)

    block             go to state 14
    vars_declaration  go to state 15


State 12

   15 identifiers_list: identifiers_list COMMA IDENTIFIER .

    $default  reduce using rule 15 (identifiers_list)


State 13

    5 vars_declaration: VAR . declare_vars

    $default  reduce using rule 9 ($@3)

    declare_vars  go to state 16
    declare_var   go to state 17
    $@3           go to state 18


State 14

    2 program: $@1 PROGRAM IDENTIFIER OPEN_PARENTHESIS identifiers_list CLOSE_PARENTHESIS SEMICOLON block . DOT

    DOT  shift, and go to state 19


State 15

    4 block: vars_declaration . $@2 compound_command

    $default  reduce using rule 3 ($@2)

    $@2  go to state 20


State 16

    5 vars_declaration: VAR declare_vars .
    7 declare_vars: declare_vars . declare_var

    IDENTIFIER  reduce using rule 9 ($@3)
    $default    reduce using rule 5 (vars_declaration)

    declare_var  go to state 21
    $@3          go to state 18


State 17

    8 declare_vars: declare_var .

    $default  reduce using rule 8 (declare_vars)


State 18

   11 declare_var: $@3 . var_list COLON type $@4 SEMICOLON

    IDENTIFIER  shift, and go to state 22

    var_list  go to state 23


State 19

    2 program: $@1 PROGRAM IDENTIFIER OPEN_PARENTHESIS identifiers_list CLOSE_PARENTHESIS SEMICOLON block DOT .

    $default  reduce using rule 2 (program)


State 20

    4 block: vars_declaration $@2 . compound_command

    $default  reduce using rule 17 ($@5)

    compound_command  go to state 24
    $@5               go to state 25


State 21

    7 declare_vars: declare_vars declare_var .

    $default  reduce using rule 7 (declare_vars)


State 22

   14 var_list: IDENTIFIER .

    $default  reduce using rule 14 (var_list)


State 23

   11 declare_var: $@3 var_list . COLON type $@4 SEMICOLON
   13 var_list: var_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 26
    COLON  shift, and go to state 27


State 24

    4 block: vars_declaration $@2 compound_command .

    $default  reduce using rule 4 (block)


State 25

   18 compound_command: $@5 . T_BEGIN commands T_END

    T_BEGIN  shift, and go to state 28


State 26

   13 var_list: var_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 29


State 27

   11 declare_var: $@3 var_list COLON . type $@4 SEMICOLON

    IDENTIFIER  shift, and go to state 30

    type  go to state 31


State 28

   18 compound_command: $@5 T_BEGIN . commands T_END

    IDENTIFIER  shift, and go to state 32

    commands    go to state 33
    assignment  go to state 34


State 29

   13 var_list: var_list COMMA IDENTIFIER .

    $default  reduce using rule 13 (var_list)


State 30

   12 type: IDENTIFIER .

    $default  reduce using rule 12 (type)


State 31

   11 declare_var: $@3 var_list COLON type . $@4 SEMICOLON

    $default  reduce using rule 10 ($@4)

    $@4  go to state 35


State 32

   22 assignment: IDENTIFIER . $@6 ASSIGNMENT expression $@7 SEMICOLON

    $default  reduce using rule 20 ($@6)

    $@6  go to state 36


State 33

   18 compound_command: $@5 T_BEGIN commands . T_END

    T_END  shift, and go to state 37


State 34

   19 commands: assignment .

    $default  reduce using rule 19 (commands)


State 35

   11 declare_var: $@3 var_list COLON type $@4 . SEMICOLON

    SEMICOLON  shift, and go to state 38


State 36

   22 assignment: IDENTIFIER $@6 . ASSIGNMENT expression $@7 SEMICOLON

    ASSIGNMENT  shift, and go to state 39


State 37

   18 compound_command: $@5 T_BEGIN commands T_END .

    $default  reduce using rule 18 (compound_command)


State 38

   11 declare_var: $@3 var_list COLON type $@4 SEMICOLON .

    $default  reduce using rule 11 (declare_var)


State 39

   22 assignment: IDENTIFIER $@6 ASSIGNMENT . expression $@7 SEMICOLON

    IDENTIFIER  shift, and go to state 40
    NUMBER      shift, and go to state 41

    expression         go to state 42
    simple_expression  go to state 43
    term               go to state 44
    factor             go to state 45


State 40

   27 factor: IDENTIFIER .

    $default  reduce using rule 27 (factor)


State 41

   26 factor: NUMBER .

    $default  reduce using rule 26 (factor)


State 42

   22 assignment: IDENTIFIER $@6 ASSIGNMENT expression . $@7 SEMICOLON

    $default  reduce using rule 21 ($@7)

    $@7  go to state 46


State 43

   23 expression: simple_expression .

    $default  reduce using rule 23 (expression)


State 44

   24 simple_expression: term .

    $default  reduce using rule 24 (simple_expression)


State 45

   25 term: factor .

    $default  reduce using rule 25 (term)


State 46

   22 assignment: IDENTIFIER $@6 ASSIGNMENT expression $@7 . SEMICOLON

    SEMICOLON  shift, and go to state 47


State 47

   22 assignment: IDENTIFIER $@6 ASSIGNMENT expression $@7 SEMICOLON .

    $default  reduce using rule 22 (assignment)
