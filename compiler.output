Terminals unused in grammar

    OPEN_BRACKETS
    CLOSE_BRACKETS
    LABEL
    TYPE
    ARRAY
    OF
    PROCEDURE
    FUNCTION
    GOTO
    IF
    THEN
    ELSE
    NOT
    OR
    AND
    INTDIV


State 26 conflicts: 3 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 PROGRAM IDENTIFIER OPEN_PARENTHESIS identifiers_list CLOSE_PARENTHESIS SEMICOLON block DOT

    3 $@2: %empty

    4 $@3: %empty

    5 block: $@2 vars_declaration $@3 compound_command

    6 vars_declaration: VAR declare_vars
    7                 | %empty

    8 declare_vars: declare_vars declare_var
    9             | declare_var

   10 declare_var: var_list COLON type SEMICOLON

   11 type: IDENTIFIER

   12 var_list: var_list COMMA IDENTIFIER
   13         | IDENTIFIER

   14 identifiers_list: identifiers_list COMMA IDENTIFIER
   15                 | IDENTIFIER

   16 compound_command: T_BEGIN commands T_END

   17 commands: commands command SEMICOLON
   18         | command SEMICOLON
   19         | %empty

   20 command: NUMBER SEMICOLON no_label_command
   21        | no_label_command

   22 no_label_command: assignment
   23                 | compound_command
   24                 | loop

   25 $@4: %empty

   26 assignment: IDENTIFIER $@4 ASSIGNMENT expression

   27 expression: simple_expression
   28           | simple_expression relation

   29 relation: EQUAL simple_expression
   30         | NOT_EQUAL simple_expression
   31         | LESS simple_expression
   32         | LESS_EQUAL simple_expression
   33         | GREATER_EQUAL simple_expression
   34         | GREATER simple_expression

   35 simple_expression: simple_expression PLUS term
   36                  | simple_expression MINUS term
   37                  | term

   38 term: term MULTIPLY factor
   39     | term DIVIDE factor
   40     | factor

   41 factor: NUMBER
   42       | IDENTIFIER
   43       | OPEN_PARENTHESIS expression CLOSE_PARENTHESIS

   44 $@5: %empty

   45 $@6: %empty

   46 loop: $@5 WHILE expression $@6 DO no_label_command


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 2
    OPEN_PARENTHESIS (259) 2 43
    CLOSE_PARENTHESIS (260) 2 43
    OPEN_BRACKETS (261)
    CLOSE_BRACKETS (262)
    COMMA (263) 12 14
    SEMICOLON (264) 2 10 17 18 20
    COLON (265) 10
    DOT (266) 2
    T_BEGIN (267) 16
    T_END (268) 16
    VAR (269) 6
    IDENTIFIER (270) 2 11 12 13 14 15 26 42
    ASSIGNMENT (271) 26
    NUMBER (272) 20 41
    LABEL (273)
    TYPE (274)
    ARRAY (275)
    OF (276)
    PROCEDURE (277)
    FUNCTION (278)
    GOTO (279)
    IF (280)
    THEN (281)
    ELSE (282)
    NOT (283)
    OR (284)
    AND (285)
    WHILE (286) 46
    DO (287) 46
    INTDIV (288)
    PLUS (289) 35
    MINUS (290) 36
    MULTIPLY (291) 38
    DIVIDE (292) 39
    EQUAL (293) 29
    NOT_EQUAL (294) 30
    LESS (295) 31
    LESS_EQUAL (296) 32
    GREATER_EQUAL (297) 33
    GREATER (298) 34


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program (45)
        on left: 2
        on right: 0
    $@1 (46)
        on left: 1
        on right: 2
    block (47)
        on left: 5
        on right: 2
    $@2 (48)
        on left: 3
        on right: 5
    $@3 (49)
        on left: 4
        on right: 5
    vars_declaration (50)
        on left: 6 7
        on right: 5
    declare_vars (51)
        on left: 8 9
        on right: 6 8
    declare_var (52)
        on left: 10
        on right: 8 9
    type (53)
        on left: 11
        on right: 10
    var_list (54)
        on left: 12 13
        on right: 10 12
    identifiers_list (55)
        on left: 14 15
        on right: 2 14
    compound_command (56)
        on left: 16
        on right: 5 23
    commands (57)
        on left: 17 18 19
        on right: 16 17
    command (58)
        on left: 20 21
        on right: 17 18
    no_label_command (59)
        on left: 22 23 24
        on right: 20 21 46
    assignment (60)
        on left: 26
        on right: 22
    $@4 (61)
        on left: 25
        on right: 26
    expression (62)
        on left: 27 28
        on right: 26 43 46
    relation (63)
        on left: 29 30 31 32 33 34
        on right: 28
    simple_expression (64)
        on left: 35 36 37
        on right: 27 28 29 30 31 32 33 34 35 36
    term (65)
        on left: 38 39 40
        on right: 35 36 37 38 39
    factor (66)
        on left: 41 42 43
        on right: 38 39 40
    loop (67)
        on left: 46
        on right: 24
    $@5 (68)
        on left: 44
        on right: 46
    $@6 (69)
        on left: 45
        on right: 46


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . PROGRAM IDENTIFIER OPEN_PARENTHESIS identifiers_list CLOSE_PARENTHESIS SEMICOLON block DOT

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 PROGRAM . IDENTIFIER OPEN_PARENTHESIS identifiers_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENTIFIER  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM IDENTIFIER . OPEN_PARENTHESIS identifiers_list CLOSE_PARENTHESIS SEMICOLON block DOT

    OPEN_PARENTHESIS  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM IDENTIFIER OPEN_PARENTHESIS . identifiers_list CLOSE_PARENTHESIS SEMICOLON block DOT

    IDENTIFIER  shift, and go to state 7

    identifiers_list  go to state 8


State 7

   15 identifiers_list: IDENTIFIER .

    $default  reduce using rule 15 (identifiers_list)


State 8

    2 program: $@1 PROGRAM IDENTIFIER OPEN_PARENTHESIS identifiers_list . CLOSE_PARENTHESIS SEMICOLON block DOT
   14 identifiers_list: identifiers_list . COMMA IDENTIFIER

    CLOSE_PARENTHESIS  shift, and go to state 9
    COMMA              shift, and go to state 10


State 9

    2 program: $@1 PROGRAM IDENTIFIER OPEN_PARENTHESIS identifiers_list CLOSE_PARENTHESIS . SEMICOLON block DOT

    SEMICOLON  shift, and go to state 11


State 10

   14 identifiers_list: identifiers_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM IDENTIFIER OPEN_PARENTHESIS identifiers_list CLOSE_PARENTHESIS SEMICOLON . block DOT

    $default  reduce using rule 3 ($@2)

    block  go to state 13
    $@2    go to state 14


State 12

   14 identifiers_list: identifiers_list COMMA IDENTIFIER .

    $default  reduce using rule 14 (identifiers_list)


State 13

    2 program: $@1 PROGRAM IDENTIFIER OPEN_PARENTHESIS identifiers_list CLOSE_PARENTHESIS SEMICOLON block . DOT

    DOT  shift, and go to state 15


State 14

    5 block: $@2 . vars_declaration $@3 compound_command

    VAR  shift, and go to state 16

    $default  reduce using rule 7 (vars_declaration)

    vars_declaration  go to state 17


State 15

    2 program: $@1 PROGRAM IDENTIFIER OPEN_PARENTHESIS identifiers_list CLOSE_PARENTHESIS SEMICOLON block DOT .

    $default  reduce using rule 2 (program)


State 16

    6 vars_declaration: VAR . declare_vars

    IDENTIFIER  shift, and go to state 18

    declare_vars  go to state 19
    declare_var   go to state 20
    var_list      go to state 21


State 17

    5 block: $@2 vars_declaration . $@3 compound_command

    $default  reduce using rule 4 ($@3)

    $@3  go to state 22


State 18

   13 var_list: IDENTIFIER .

    $default  reduce using rule 13 (var_list)


State 19

    6 vars_declaration: VAR declare_vars .
    8 declare_vars: declare_vars . declare_var

    IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 6 (vars_declaration)

    declare_var  go to state 23
    var_list     go to state 21


State 20

    9 declare_vars: declare_var .

    $default  reduce using rule 9 (declare_vars)


State 21

   10 declare_var: var_list . COLON type SEMICOLON
   12 var_list: var_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 24
    COLON  shift, and go to state 25


State 22

    5 block: $@2 vars_declaration $@3 . compound_command

    T_BEGIN  shift, and go to state 26

    compound_command  go to state 27


State 23

    8 declare_vars: declare_vars declare_var .

    $default  reduce using rule 8 (declare_vars)


State 24

   12 var_list: var_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 28


State 25

   10 declare_var: var_list COLON . type SEMICOLON

    IDENTIFIER  shift, and go to state 29

    type  go to state 30


State 26

   16 compound_command: T_BEGIN . commands T_END

    T_BEGIN     shift, and go to state 26
    IDENTIFIER  shift, and go to state 31
    NUMBER      shift, and go to state 32

    T_BEGIN     [reduce using rule 19 (commands)]
    IDENTIFIER  [reduce using rule 19 (commands)]
    NUMBER      [reduce using rule 19 (commands)]
    WHILE       reduce using rule 19 (commands)
    WHILE       [reduce using rule 44 ($@5)]
    $default    reduce using rule 19 (commands)

    compound_command  go to state 33
    commands          go to state 34
    command           go to state 35
    no_label_command  go to state 36
    assignment        go to state 37
    loop              go to state 38
    $@5               go to state 39


State 27

    5 block: $@2 vars_declaration $@3 compound_command .

    $default  reduce using rule 5 (block)


State 28

   12 var_list: var_list COMMA IDENTIFIER .

    $default  reduce using rule 12 (var_list)


State 29

   11 type: IDENTIFIER .

    $default  reduce using rule 11 (type)


State 30

   10 declare_var: var_list COLON type . SEMICOLON

    SEMICOLON  shift, and go to state 40


State 31

   26 assignment: IDENTIFIER . $@4 ASSIGNMENT expression

    $default  reduce using rule 25 ($@4)

    $@4  go to state 41


State 32

   20 command: NUMBER . SEMICOLON no_label_command

    SEMICOLON  shift, and go to state 42


State 33

   23 no_label_command: compound_command .

    $default  reduce using rule 23 (no_label_command)


State 34

   16 compound_command: T_BEGIN commands . T_END
   17 commands: commands . command SEMICOLON

    T_BEGIN     shift, and go to state 26
    T_END       shift, and go to state 43
    IDENTIFIER  shift, and go to state 31
    NUMBER      shift, and go to state 32

    $default  reduce using rule 44 ($@5)

    compound_command  go to state 33
    command           go to state 44
    no_label_command  go to state 36
    assignment        go to state 37
    loop              go to state 38
    $@5               go to state 39


State 35

   18 commands: command . SEMICOLON

    SEMICOLON  shift, and go to state 45


State 36

   21 command: no_label_command .

    $default  reduce using rule 21 (command)


State 37

   22 no_label_command: assignment .

    $default  reduce using rule 22 (no_label_command)


State 38

   24 no_label_command: loop .

    $default  reduce using rule 24 (no_label_command)


State 39

   46 loop: $@5 . WHILE expression $@6 DO no_label_command

    WHILE  shift, and go to state 46


State 40

   10 declare_var: var_list COLON type SEMICOLON .

    $default  reduce using rule 10 (declare_var)


State 41

   26 assignment: IDENTIFIER $@4 . ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 47


State 42

   20 command: NUMBER SEMICOLON . no_label_command

    T_BEGIN     shift, and go to state 26
    IDENTIFIER  shift, and go to state 31

    $default  reduce using rule 44 ($@5)

    compound_command  go to state 33
    no_label_command  go to state 48
    assignment        go to state 37
    loop              go to state 38
    $@5               go to state 39


State 43

   16 compound_command: T_BEGIN commands T_END .

    $default  reduce using rule 16 (compound_command)


State 44

   17 commands: commands command . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 45

   18 commands: command SEMICOLON .

    $default  reduce using rule 18 (commands)


State 46

   46 loop: $@5 WHILE . expression $@6 DO no_label_command

    OPEN_PARENTHESIS  shift, and go to state 50
    IDENTIFIER        shift, and go to state 51
    NUMBER            shift, and go to state 52

    expression         go to state 53
    simple_expression  go to state 54
    term               go to state 55
    factor             go to state 56


State 47

   26 assignment: IDENTIFIER $@4 ASSIGNMENT . expression

    OPEN_PARENTHESIS  shift, and go to state 50
    IDENTIFIER        shift, and go to state 51
    NUMBER            shift, and go to state 52

    expression         go to state 57
    simple_expression  go to state 54
    term               go to state 55
    factor             go to state 56


State 48

   20 command: NUMBER SEMICOLON no_label_command .

    $default  reduce using rule 20 (command)


State 49

   17 commands: commands command SEMICOLON .

    $default  reduce using rule 17 (commands)


State 50

   43 factor: OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 50
    IDENTIFIER        shift, and go to state 51
    NUMBER            shift, and go to state 52

    expression         go to state 58
    simple_expression  go to state 54
    term               go to state 55
    factor             go to state 56


State 51

   42 factor: IDENTIFIER .

    $default  reduce using rule 42 (factor)


State 52

   41 factor: NUMBER .

    $default  reduce using rule 41 (factor)


State 53

   46 loop: $@5 WHILE expression . $@6 DO no_label_command

    $default  reduce using rule 45 ($@6)

    $@6  go to state 59


State 54

   27 expression: simple_expression .
   28           | simple_expression . relation
   35 simple_expression: simple_expression . PLUS term
   36                  | simple_expression . MINUS term

    PLUS           shift, and go to state 60
    MINUS          shift, and go to state 61
    EQUAL          shift, and go to state 62
    NOT_EQUAL      shift, and go to state 63
    LESS           shift, and go to state 64
    LESS_EQUAL     shift, and go to state 65
    GREATER_EQUAL  shift, and go to state 66
    GREATER        shift, and go to state 67

    $default  reduce using rule 27 (expression)

    relation  go to state 68


State 55

   37 simple_expression: term .
   38 term: term . MULTIPLY factor
   39     | term . DIVIDE factor

    MULTIPLY  shift, and go to state 69
    DIVIDE    shift, and go to state 70

    $default  reduce using rule 37 (simple_expression)


State 56

   40 term: factor .

    $default  reduce using rule 40 (term)


State 57

   26 assignment: IDENTIFIER $@4 ASSIGNMENT expression .

    $default  reduce using rule 26 (assignment)


State 58

   43 factor: OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 71


State 59

   46 loop: $@5 WHILE expression $@6 . DO no_label_command

    DO  shift, and go to state 72


State 60

   35 simple_expression: simple_expression PLUS . term

    OPEN_PARENTHESIS  shift, and go to state 50
    IDENTIFIER        shift, and go to state 51
    NUMBER            shift, and go to state 52

    term    go to state 73
    factor  go to state 56


State 61

   36 simple_expression: simple_expression MINUS . term

    OPEN_PARENTHESIS  shift, and go to state 50
    IDENTIFIER        shift, and go to state 51
    NUMBER            shift, and go to state 52

    term    go to state 74
    factor  go to state 56


State 62

   29 relation: EQUAL . simple_expression

    OPEN_PARENTHESIS  shift, and go to state 50
    IDENTIFIER        shift, and go to state 51
    NUMBER            shift, and go to state 52

    simple_expression  go to state 75
    term               go to state 55
    factor             go to state 56


State 63

   30 relation: NOT_EQUAL . simple_expression

    OPEN_PARENTHESIS  shift, and go to state 50
    IDENTIFIER        shift, and go to state 51
    NUMBER            shift, and go to state 52

    simple_expression  go to state 76
    term               go to state 55
    factor             go to state 56


State 64

   31 relation: LESS . simple_expression

    OPEN_PARENTHESIS  shift, and go to state 50
    IDENTIFIER        shift, and go to state 51
    NUMBER            shift, and go to state 52

    simple_expression  go to state 77
    term               go to state 55
    factor             go to state 56


State 65

   32 relation: LESS_EQUAL . simple_expression

    OPEN_PARENTHESIS  shift, and go to state 50
    IDENTIFIER        shift, and go to state 51
    NUMBER            shift, and go to state 52

    simple_expression  go to state 78
    term               go to state 55
    factor             go to state 56


State 66

   33 relation: GREATER_EQUAL . simple_expression

    OPEN_PARENTHESIS  shift, and go to state 50
    IDENTIFIER        shift, and go to state 51
    NUMBER            shift, and go to state 52

    simple_expression  go to state 79
    term               go to state 55
    factor             go to state 56


State 67

   34 relation: GREATER . simple_expression

    OPEN_PARENTHESIS  shift, and go to state 50
    IDENTIFIER        shift, and go to state 51
    NUMBER            shift, and go to state 52

    simple_expression  go to state 80
    term               go to state 55
    factor             go to state 56


State 68

   28 expression: simple_expression relation .

    $default  reduce using rule 28 (expression)


State 69

   38 term: term MULTIPLY . factor

    OPEN_PARENTHESIS  shift, and go to state 50
    IDENTIFIER        shift, and go to state 51
    NUMBER            shift, and go to state 52

    factor  go to state 81


State 70

   39 term: term DIVIDE . factor

    OPEN_PARENTHESIS  shift, and go to state 50
    IDENTIFIER        shift, and go to state 51
    NUMBER            shift, and go to state 52

    factor  go to state 82


State 71

   43 factor: OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .

    $default  reduce using rule 43 (factor)


State 72

   46 loop: $@5 WHILE expression $@6 DO . no_label_command

    T_BEGIN     shift, and go to state 26
    IDENTIFIER  shift, and go to state 31

    $default  reduce using rule 44 ($@5)

    compound_command  go to state 33
    no_label_command  go to state 83
    assignment        go to state 37
    loop              go to state 38
    $@5               go to state 39


State 73

   35 simple_expression: simple_expression PLUS term .
   38 term: term . MULTIPLY factor
   39     | term . DIVIDE factor

    MULTIPLY  shift, and go to state 69
    DIVIDE    shift, and go to state 70

    $default  reduce using rule 35 (simple_expression)


State 74

   36 simple_expression: simple_expression MINUS term .
   38 term: term . MULTIPLY factor
   39     | term . DIVIDE factor

    MULTIPLY  shift, and go to state 69
    DIVIDE    shift, and go to state 70

    $default  reduce using rule 36 (simple_expression)


State 75

   29 relation: EQUAL simple_expression .
   35 simple_expression: simple_expression . PLUS term
   36                  | simple_expression . MINUS term

    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61

    $default  reduce using rule 29 (relation)


State 76

   30 relation: NOT_EQUAL simple_expression .
   35 simple_expression: simple_expression . PLUS term
   36                  | simple_expression . MINUS term

    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61

    $default  reduce using rule 30 (relation)


State 77

   31 relation: LESS simple_expression .
   35 simple_expression: simple_expression . PLUS term
   36                  | simple_expression . MINUS term

    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61

    $default  reduce using rule 31 (relation)


State 78

   32 relation: LESS_EQUAL simple_expression .
   35 simple_expression: simple_expression . PLUS term
   36                  | simple_expression . MINUS term

    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61

    $default  reduce using rule 32 (relation)


State 79

   33 relation: GREATER_EQUAL simple_expression .
   35 simple_expression: simple_expression . PLUS term
   36                  | simple_expression . MINUS term

    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61

    $default  reduce using rule 33 (relation)


State 80

   34 relation: GREATER simple_expression .
   35 simple_expression: simple_expression . PLUS term
   36                  | simple_expression . MINUS term

    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61

    $default  reduce using rule 34 (relation)


State 81

   38 term: term MULTIPLY factor .

    $default  reduce using rule 38 (term)


State 82

   39 term: term DIVIDE factor .

    $default  reduce using rule 39 (term)


State 83

   46 loop: $@5 WHILE expression $@6 DO no_label_command .

    $default  reduce using rule 46 (loop)
